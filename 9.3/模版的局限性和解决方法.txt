class people {
public:
	people(string name, int age) {
		m_name = name;
		m_age = age;
	}
	int m_age;
	string m_name;
};
template <class T>
bool test(T &a , T & b) {
	if (a == b) {
		return 1;
	}
	return false;
}
template<>bool test(people& a, people& b) {//用People类型具体化，为特殊的类型，另写一个实现它，编译器一看到T是People类型的就调用这个函数
	if (a.m_age == b.m_age && a.m_name == b.m_name) {
		return true;
	}
	return false;
}
int main() {
	int a = 10;
	int b = 20;
	people p1("zhangsan", 10);
	people p2("lisi", 20);
	bool ret = test(p1, p2);
	if (ret) {
		cout << "equal" << endl;
		return 1;
	}
	cout << "inequal" << endl;
}