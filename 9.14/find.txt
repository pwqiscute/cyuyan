class person {
public:
	person(string name, int age) {
		this->m_Name = name;
		this->m_Age = age;
	}
	//
	bool operator==(const person& p) {
		if (this->m_Name == p.m_Name && this->m_Age == p.m_Age) {//底层是==，底层不知道如何对比，我们需要重载==；
			return true;
		}
		else {
			return false;
		}
	}
	string m_Name;
	int m_Age;
};
void test() {
	vector<int> v;
	for (int i = 0; i < 10; ++i) {
		v.push_back(i);
	}
	vector<int>::iterator it = find(v.begin(), v.end(), 5);
	if (it == v.end()) {
		cout << "not find" << endl;
	}
	else {
		cout << "find" << *it<<endl;
	}
}
void test01() {
	vector<person> v;
	person p1("aaa", 10);
	person p2("bbb", 20);
	person p3("ccc", 40);
	person p4("ddd", 30);

	v.push_back(p1);
	v.push_back(p2);
	v.push_back(p3);
	v.push_back(p4);

	vector<person>::iterator it=find(v.begin(), v.end(),p2);
	if (it == v.end()) {
		cout << "not find" << endl;
	}
	else {
		cout << "find" << it->m_Age <<it->m_Name << endl;
	}
}