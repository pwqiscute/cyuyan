typedef struct Qnode{
QElemType data;
stuct Qnode *next;
}QNode,*QuenePtr;

typedef struct{
QuenePtr front;//对头指针
QuenePtr rear;//队尾指针
}LinkQuene;

初始化
Status InitQuene(LinkQuene &Q){
Q.front=Q.rear=(QuenePtr)malloc(sizeof(QNode));
if(!Qfront)exit(OVERFLOW);
Q.front->next=NULL;
return OK;
}

销毁
Status DestroyQuene(LinkQuene &Q){
while(Q.front){
p=Q.front->next;
free(Q.front);
Q.front=p;
}
return OK;}

将e元素入队
Status PushQuene(LinkQuene &Q,QElemType e){
p=new QNode;
if(!p)return ERROR;
p.data=e;
p.next=NULL:
Q.rear->next=p;
Q.rear=p;
return Ok;
}

出队
Status DeQueue(LinkQueue &Q,QElemType &e){
if(Q.front==Q.rear)return ERROR;
p=Q.front->next;
e=p->data;
Q.front->=p->next;
if(Q.rear==p)Q.rear==Q.front;
delete p;
return OK;
}
