#include "game.h"
//初始化棋盘
void Initialize(char arr[Acoss][Row],char c) {
	for (int i = 0; i < Acoss; i++) {
		for (int j = 0; j < Row; j++) {
			arr[i][j] = c;
		}
	}
}
//打印棋盘
void Print(char arr[Acoss][Row]) {
	for (int n = 0; n < Row - 1; n++) {
		printf("%d ", n);
	}
	printf("\n");
	for (int i = 1; i < Acoss - 1; i++) {
		printf("%d ", i);
		for (int j = 1; j < Row - 1; j++) {
			printf("%c ", arr[i][j]);
		}
		printf("\n");
  }
}
//放雷
void Makeray(char ray[Acoss][Row]) {
	int ray1 = Ray;
	while (1) {
		int x = rand() % 9 + 1;
		int y = rand() % 9 + 1;
		if (ray[x][y] == '0') {
			ray[x][y] = '1';
			ray1--;
		}
		if (ray1 == 0) {
			break;
		}
	}
}
//给雷标志
void Sign(char arr[Acoss][Row]) {
	printf("如果要给雷标志，请输入’2‘,结束输入’0‘\n");
	int sign = 0;
	scanf_s("%d", &sign);
	while (sign == 2) {
		int x = 0;
		int y = 0;
		printf("请输入你要标志点的地方\n");
		scanf_s("%d%d", &x, &y);
		if (x >= 1 && x < Acoss - 1 && y >= 1 && y < Row - 1) {
			if (arr[x][y] == '*') {
				arr[x][y] = '!';
				Print(arr);
			}
			else
				printf("输入错误，请重新输入\n");
		}
		else {
			printf("此处不可能是雷，请重新输入\n");
		}
		printf("如果想继续给雷标志，请输入’2‘\n");
	scanf_s("%d", &sign);
	}
}
//删除原有标志
void Deletesign(char arr[Acoss][Row]) {
	printf("如果需要删除标志，请输入’3‘\n");
	int d = 0;
	scanf_s("%d", &d);
	while (d == 3) {
		int x = 0;
		int y = 0;	
		printf("请输入要删除的点\n");
		scanf_s("%d%d", &x, &y);
		if (arr[x][y] == '!') {
			arr[x][y] = '*';
			Print(arr);
		}
		else {
			printf("输入错误，请重新输入\n");
		}
		printf("如果想继续请输入’3‘,结束请输入’0‘\n");
		scanf_s("%d", &d);
	}
}
//计算数附近的雷数
int Countray(char arr[Acoss][Row],int x,int y) {
	return (arr[x - 1][y] + arr[x + 1][y] + arr[x + 1][y - 1] + arr[x + 1][y] + arr[x + 1][y + 1] + arr[x - 1][y - 1] + arr[x - 1][y] + arr[x - 1][y + 1]) - 8 * '/0';
}
//展开，一个厉害的功能
void Unfold(char ray[Acoss][Row], char show[Acoss][Row], int x, int y) {
	if (x >= 1 && x <= Acoss - 2 && y >= 1 && y <= Row - 2) {
		int count = Countray(ray, x, y);
		if (count == 0) {
			show[x][y] = ' ';
			for (int i = x - 1; i <= x + 1; i++) {
				for (int j = y - 1; j <= x + 1; j++) {
					if (show[i][j] == '*') {
						Unfold(ray, show, i, j);
						
					}
				}
			}
		}
		show[x][y] = Countray(ray, x, y) + '0';
	}
}
	

//玩家操作排雷
void Pairay(char arr1[Acoss][Row], char arr2[Acoss][Row]) {//arr1是雷，arr2是玩家页面
	printf("请你操作，如1 2；2 3等\n");
	int x = 0;
	int y = 0;
	int win = 0;
	while (win < ((Acoss - 2) * (Row - 2) - Ray)) {
		scanf_s("%d%d", &x, &y);
		if (x >= 1 && x <= Acoss - 2 && y >= 1 && y <= Row - 2) {
			if (arr1[x][y] == '1') {
				printf("你踩雷了，游戏失败！\n");
				Print(arr1);
				break;
			}
			else {
				Unfold(arr1, arr2, x, y);
				int count = Countray(arr1, x, y);
				arr2[x][y] = count + '0';
				Print(arr2);
				win++;
			}
			if (win == (Acoss - 2) * (Row - 2)) {
				printf("真厉害，恭喜你过关");
				break;
			}
		}
		else {
			printf("坐标有误，请重新输入\n");
			break;
		}
		Sign(arr2);
		Deletesign(arr2);
		printf("继续你的操作\n");
	}
}
