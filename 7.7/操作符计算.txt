
~
2进制按位取反
0的2进制
00000000000000000000000000000000
~0：11111111111111111111111111111111（补码）
       11111111111111111111111111111110（反码）
        10000000000000000000000000000001（源码）=-1


int a=13;
a|=(1<<4）；
printf("%d\n",a)//a=29(把第4个0变位1）
a &=(~1<<4)/a^(1<<4) (把第四个1变位0）
 

"abc"=="abcdef" 比较的是俩个首字符串的地址，用strcmp("abc","abcdef")比较
strcat(p1,p2);把p2的字符串放在p1后面，前提是p1的容量够大；
strcmp(char* p1,char* p2);如果p1大于p2返回‘1’，如果p1=p2就返回‘0’，如果p1小于p2就返回-1；

（非0为真）
&&---并且，有一个为假为0；1&2=0;1&&2=1;如     0&&2&&3；从左到右，先判断第一个如果第一个为假后面就没有进行的必要，后面就根本没有运行；
||---或者 1|2=3;1||2=1;                       ||和&&运行过程一样；


三目操作符
a>b?a:b;如果前面为真，返回a，如果前面为假，返回b

逗号表达式：就是用逗号隔开的式子；
它从左到右依次进行，整个表达式的结果就是最后一个表达式的结果；
如：int a=10;int b=12;
int c=(a=a+b,b=b+1);----->c=13;
if（a>b,b>a,a>10)就是a大于10的判断结果就是整个表达式的结果；为0；
while（a++,b++,a<12);先进行前面的赋值，在判断；和do--while（）循环异曲同工之妙；
  
[]是个操作符，如a+b=b+a；所以arr[7]=7[arr];arr[7]--->*(arr+7)就是第八个元素；

->是指向实例化对象的属性如：struck Student s；s是实例化对象，里面有名字等属性；可以s->name指向s的name属性；
s->age=20;s->age和(*s).age (same)

如果方法中要传入一个struck的参数，要传进struck的地址；如：Printstruck（struck student* stu），通过地址才可以改变struck对象里属性的值，和数组一个道理；

