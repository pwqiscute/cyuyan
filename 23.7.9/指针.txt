数组的数组名就是首元素的地址；
arr[i]=*(arr+i)
int arr[i]=int* (arr+i)
指针的减法得到两个指针中间的元素数量；如：arr[9]-arr[0]=9;
指针的加法是没有意义的；
指针的比较最好与后面扩容的数进行比较；
平时说的指针是指指针容量：就是里面的地址；
真正的指针是一个地址；如：int a=10;int* p=&a;&p;&p就是门牌号，通过它找到存放的&a;然后用*p找到&a存放的值
&p是2级指针，前缀是int* *，要通过其找到a；可以**&p;第2个“*”说&p是指针；int*是指向p的类型；

 

每一个指针类型在32位电脑里是4个字节；在64位电脑里是8个字节；
int c=3;
char* a=（char*）&c;
int* b=&c;
虽然都是一样的内存，但是类型不同，所存的范围不同；char类型只有一个字节，所以在4个字节的内存中会分为4个一样的空间，每个空间都存着char类型的数，其指针+1是指下一个字节的char类型的数；
注意：如果存的数超过char类型（-128-127）会劫取2进制的后8位数||16进制的后2位数；前面的数会去掉；

int* p=NULL;(避免成为野指针）